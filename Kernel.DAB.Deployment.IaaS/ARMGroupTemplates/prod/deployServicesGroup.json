{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring"
    },
    "location": {
      "type": "string"
    },
    "storageAccountNamePrefix": {
      "type": "string"
    },
    "storageAccountType": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "DigAgroVNet",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Name of virtual network to be created"
      }
    },
    "servicesVMSize": {
      "type": "string",
      "metadata": {
        "group": "Services server settings",
        "description": "The size of the Service VMs created"
      },
      "defaultValue": "Standard_DS1"
    },
    "subNetName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "string"
    }
  },
  "variables": {
    "createNICTemplateFolder": "ARMTemplates/prod",
    "createNICTemplateFileName": "createNIC.json",
    //"createNICTemplateParametersFileName": "createNIC.parameters.json",
    "createStorageAccountTemplateFolder": "ARMTemplates/prod",
    "createStorageAccountTemplateFileName": "createStorageAccount.json",
    //"createStorageAccountTemplateParametersFileName": "createStorageAccount.parameters.json",
    "createPublicIPTemplateFolder": "ARMTemplates/prod",
    "createPublicIPTemplateFileName": "createPublicIP.json",
    //"createPublicIPTemplateParametersFileName": "createPublicIP.parameters.json",
    "createWindowsVirtualMachineTemplateFolder": "ARMTemplates/prod",
    "createWindowsVirtualMachineTemplateFileName": "createWindowsVirtualMachine.json",
    //"createWindowsVirtualMachineTemplateParametersFileName": "createWindowsVirtualMachine.parameters.json"
    //"VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    //"staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "servicesPublicIPAddressName": "servicesPublicIP",
    "servicesNetworkInterfaceName": "servicesNiC",
    "vmSettings": {
      "vmContainerName": "vhds",
      "servicesVMName": "services-web",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2012-R2-Datacenter",
      "rdpPort": 3389,
      "windowsDiskSize": 128

    }
  },
  "resources": [ //potentially you can create here a few network interfaces as it is in LookIntoDeep
    {
      "name": "createStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('createStorageAccountTemplateFolder'), '/', variables('createStorageAccountTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        //    "parametersLink": {
        //      "uri": "[concat(parameters('_artifactsLocation'), '/', variables('createPublicIPTemplateFolder'), '/', variables('createPublicIPTemplateParametersFileName'), parameters('_artifactsLocationSasToken'))]",
        //      "contentVersion": "1.0.0.0"
        //    },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },

    {
      "name": "createPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('createPublicIPTemplateFolder'), '/', variables('createPublicIPTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        //    "parametersLink": {
        //      "uri": "[concat(parameters('_artifactsLocation'), '/', variables('createPublicIPTemplateFolder'), '/', variables('createPublicIPTemplateParametersFileName'), parameters('_artifactsLocationSasToken'))]",
        //      "contentVersion": "1.0.0.0"
        //    }
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "variables('servicesPublicIPAddressName')"
          },
          "publicIPAddressType": {
            "value": "Dynamic"
          },
          "dnsPrefix": {
            "value": "services"
          }
        }
      }

    },

    {
      "name": "createNetworkInterface",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        //"Microsoft.Resources/deployments/CreatingVirtualNetwork",
        "Microsoft.Resources/deployments/createPublicIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/',variables('createNICTemplateFolder'),'/',variables('createNICTemplateFolder'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "networkInterfaceName": {
            "value": "[variables('servicesNetworkInterfaceName')]"
          },
          "publicIPAddressName": {
            "value": "[variables('servicesPublicIPAddressName')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "subNetName": {
            "value": "[parameters('subNetName')]"
          }
        }
      }
    }
   //{
   //   "name": "createWindowsVirtualMachine",
   //   "type": "Microsoft.Resources/deployments",
   //   "apiVersion": "2016-09-01",
   //   "dependsOn": [
   //     "Microsoft.Resources/deployments/createStorageAccount",
   //     "Microsoft.Resources/deployments/createNetworkInterface"
   //   ],
   //   "properties": {
   //     "mode": "Incremental",
   //     "templateLink": {
   //       "uri": "[concat(parameters('_artifactsLocation'), '/', variables('createWindowsVirtualMachineTemplateFolder'), '/', variables('createWindowsVirtualMachineTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
   //       "contentVersion": "1.0.0.0"
   //     },
   //     //  "parametersLink": {
   //     //    "uri": "[concat(parameters('_artifactsLocation'), '/', variables('createWindowsVirtualMachineTemplateFolder'), '/', variables('createWindowsVirtualMachineTemplateParametersFileName'), parameters('_artifactsLocationSasToken'))]",
   //     //    "contentVersion": "1.0.0.0"
   //     //  }
   //     "parameters": {
   //       "servicesVMName": {
   //         "value": "[variables('vmSettings').services]"
   //       },
   //       "location": {
   //         "value": "[parameters('location')]"
   //       },
   //       "servicesVMSize": {
   //         "value": "[parameters('servicesVMSize')]"
   //       },
   //       //"spWebAvailabilitySet": {
   //       //  "value": "[variables('ids').spWebAvailabilitySetName]"
   //       //},
   //       //"spAppAvailabilitySet": {
   //       //  "value": "[variables('ids').spAppAvailabilitySetName]"
   //       //},
   //       "adminUsername": {
   //         "value": "[parameters('adminUsername')]"
   //       },
   //       "adminPassword": {
   //         "value": "[parameters('adminPassword')]"
   //       },
   //       "spImagePublisher": {
   //         "value": "[variables('vmSettings').spImagePublisher]"
   //       },
   //       "spImageOffer": {
   //         "value": "[variables('vmSettings').spImageOffer]"
   //       },
   //       "spImageSKU": {
   //         "value": "[variables('vmSettings').spImageSKU]"
   //       },
   //       "vmContainerName": {
   //         "value": "[variables('vmSettings').vmContainerName]"
   //       },
   //       "storageAccountNamePrefix": {
   //         "value": "[parameters('storageAccountNamePrefix')]"
   //       }
   //       //"spPreparationModulesURL": {
   //       //  "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','PrepareSharePointServerHA.ps1.zip', parameters('_artifactsLocationSasToken'))]"
   //       //},
   //       //"spPreparationFunction": {
   //       //  "value": "PrepareSharePointServerHA.ps1\\PrepareSharePointServerHA"
   //       // },
   //       //"domainName": {
   //       //  "value": "[parameters('domainName')]"
   //       //},
   //       //"DNSServer": {
   //       //  "value": "[parameters('adPdcNicIPAddress')]"
   //     }
   //     }

   //   }
    
  ],
  "outputs": {
  }
}
